{
    "project": {
        "name": "Ember Light Table",
        "description": "Lightweight, component based table for Ember 2.x",
        "url": "https://github.com/offirgolan/ember-light-table",
        "version": "v1.0.0-beta.2"
    },
    "files": {
        "addon/classes/Column.js": {
            "name": "addon/classes/Column.js",
            "modules": {
                "Classes": 1
            },
            "classes": {
                "Column": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/classes/Row.js": {
            "name": "addon/classes/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/classes/Table.js": {
            "name": "addon/classes/Table.js",
            "modules": {},
            "classes": {
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/light-table.js": {
            "name": "addon/components/light-table.js",
            "modules": {
                "Components": 1
            },
            "classes": {
                "Light Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/lt-body.js": {
            "name": "addon/components/lt-body.js",
            "modules": {},
            "classes": {
                "Body": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/lt-foot.js": {
            "name": "addon/components/lt-foot.js",
            "modules": {},
            "classes": {
                "Foot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/lt-head.js": {
            "name": "addon/components/lt-head.js",
            "modules": {},
            "classes": {
                "Head": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/table-header.js": {
            "name": "addon/mixins/table-header.js",
            "modules": {
                "Mixins": 1
            },
            "classes": {
                "TableHeaderMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/table-scroll.js": {
            "name": "addon/mixins/table-scroll.js",
            "modules": {},
            "classes": {
                "TableScrollMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/index.js": {
            "name": "addon/index.js",
            "modules": {
                "Home": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Classes": {
            "name": "Classes",
            "submodules": {},
            "elements": {},
            "classes": {
                "Column": 1,
                "Row": 1,
                "Table": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/classes/Table.js",
            "line": 104
        },
        "Components": {
            "name": "Components",
            "submodules": {},
            "elements": {},
            "classes": {
                "Light Table": 1,
                "Body": 1,
                "Foot": 1,
                "Head": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "addon/components/lt-head.js",
            "line": 9,
            "description": "```hbs\n{{#light-table table as |t|}}\n  {{t.head}}\n  {{t.body}}\n  {{t.foot}}\n{{/light-table}}\n```\n\nPlease see the documentation for the [Head](../classes/Head.html), [Body](../classes/Body.html), and [Foot](../classes/Foot.html) components\nfor more details on all possible options and actions.",
            "itemtype": "main"
        },
        "Mixins": {
            "name": "Mixins",
            "submodules": {},
            "elements": {},
            "classes": {
                "TableHeaderMixin": 1,
                "TableScrollMixin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/mixins/table-scroll.js",
            "line": 14
        },
        "Home": {
            "name": "Home",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/index.js",
            "line": 5,
            "description": "A lightweight contextual component based table addon that follows Ember's actions up, data down ideology.\n\n## Features\n\n* Custom component based column headers and cells\n* Infinite scroll support\n* Select & Multi-select\n* Grouped columns\n* Expandable rows\n* Easy table manipulation\n* Easy override to table header and footer\n* Contextual component for header, body, and footer, as well as loading, no data, and expanded row\n\n## Installation\n```shell\nember install ember-light-table\n```\n\n## Looking for help?\nIf it is a bug [please open an issue on GitHub](http://github.com/offirgolan/ember-light-table/issues).\n\n## Usage\nThere are two parts to this addon. The first is the [Table](../classes/Table.html) which you create with column definitions and rows, and the second is the component declaration.\n\n### Table Declaration\nThe `Table` constructor accepts an array of `Columns` or column options and an array of rows.\n\n```javascript\nimport Table from 'ember-light-table';\nconst table = new Table(columns, rows);\n```\n\nHere is a more real-word example\n\n```javascript\n// components/my-table.js\nimport Ember from 'ember';\nimport Table from 'ember-light-table';\n\nconst computed = Ember.computed;\n\nexport default Ember.Component.extend({\n  model: null,\n  table: null,\n\n  columns: computed(function() {\n    return [{\n      label: 'Avatar',\n      valuePath: 'avatar',\n      width: '60px',\n      sortable: false,\n      cellComponent: 'user-avatar'\n    }, {\n      label: 'First Name',\n      valuePath: 'firstName',\n      width: '150px'\n    }, {\n      label: 'Last Name',\n      valuePath: 'lastName',\n      width: '150px'\n    }, {\n      label: 'Address',\n      valuePath: 'address'\n    }, {\n      label: 'State',\n      valuePath: 'state'\n    }, {\n      label: 'Country',\n      valuePath: 'country'\n    }];\n  }),\n\n  init() {\n    this._super(...arguments);\n    this.set('table', new Table(this.get('columns'), this.get('model')));\n  }\n});\n```\n\nFor a list of possible column options, please\n[checkout out the docs](../classes/Column.html).\n\n### Component Declaration\n\nNow that we have our `table`, we can declare our component in our template.\n\n```hbs\n{{#light-table table as |t|}}\n  {{t.head}}\n\n  {{#t.body as |body|}}\n    {{#body.expanded-row as |row|}}\n      Hello <b>{{row.firstName}}</b>\n    {{/body.expanded-row}}\n\n    {{#if isLoading}}\n      {{#body.loader}}\n        Loading...\n      {{/body.loader}}\n    {{/if}}\n\n    {{#if table.isEmpty)}}\n      {{#body.no-data}}\n        No users found.\n      {{/body.no-data}}\n    {{/if}}\n  {{/t.body}}\n\n  {{t.foot}}\n{{/light-table}}\n```\n\nPlease note that each of these contextual components have a wide array of options so it is advised to look\nthrough the documentation."
        }
    },
    "classes": {
        "Column": {
            "name": "Column",
            "shortname": "Column",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Classes",
            "namespace": "",
            "file": "addon/classes/Column.js",
            "line": 127,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Classes",
            "namespace": "",
            "file": "addon/classes/Row.js",
            "line": 22,
            "is_constructor": 1,
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Classes",
            "namespace": "",
            "file": "addon/classes/Table.js",
            "line": 104,
            "is_constructor": 1,
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ]
        },
        "Light Table": {
            "name": "Light Table",
            "shortname": "Light Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Components",
            "namespace": "",
            "file": "addon/components/light-table.js",
            "line": 16,
            "description": "```hbs\n{{#light-table table as |t|}}\n  {{t.head}}\n  {{t.body}}\n  {{t.foot}}\n{{/light-table}}\n```\n\nPlease see the documentation for the [Head](../classes/Head.html), [Body](../classes/Body.html), and [Foot](../classes/Foot.html) components\nfor more details on all possible options and actions.",
            "mainName": "Components",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "uses": [
                "TableScrollMixin"
            ]
        },
        "Body": {
            "name": "Body",
            "shortname": "Body",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Components",
            "namespace": "",
            "file": "addon/components/lt-body.js",
            "line": 13,
            "description": "```hbs\n{{#light-table table as |t|}}\n  {{#t.body multiSelect=true onRowClick=(action 'rowClicked')}}\n    {{#body.expanded-row as |row|}}\n      Hello <b>{{row.firstName}}</b>\n    {{/body.expanded-row}}\n\n    {{#if isLoading}}\n      {{#body.loader}}\n        Loading...\n      {{/body.loader}}\n    {{/if}}\n\n    {{#if table.isEmpty)}}\n      {{#body.no-data}}\n        No users found.\n      {{/body.no-data}}\n    {{/if}}\n  {{/t.body}}\n{{/light-table}}\n```"
        },
        "Foot": {
            "name": "Foot",
            "shortname": "Foot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Components",
            "namespace": "",
            "file": "addon/components/lt-foot.js",
            "line": 9,
            "description": "```hbs\n{{#light-table table as |t|}}\n  {{t.foot onColumnClick=(action 'sortByColumn')}}\n{{/light-table}}\n```\nIf you want to define your own tfoot, just declare the contextual component in a block.\n\n```hbs\n{{#light-table table as |t|}}\n  {{#t.foot onColumnClick=(action 'sortByColumn') as |columns table|}}\n    {{#each columns as |column|}}\n      {{!-- ... --}}\n    {{/each}}\n  {{/t.foot}}\n{{/light-table}}\n```\n\nwill be empty",
            "uses": [
                "TableColumnMixin"
            ]
        },
        "Head": {
            "name": "Head",
            "shortname": "Head",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Components",
            "namespace": "",
            "file": "addon/components/lt-head.js",
            "line": 9,
            "description": "```hbs\n{{#light-table table as |t|}}\n  {{t.head onColumnClick=(action 'sortByColumn')}}\n{{/light-table}}\n```\n\nIf you want to define your own thead, just declare the contextual component in a block.\n\n```hbs\n{{#light-table table as |t|}}\n  {{#t.head onColumnClick=(action 'sortByColumn') as |groups subColumns table|}}\n    {{#each groups as |group|}}\n      {{!-- ... --}}\n    {{/each}}\n  {{/t.head}}\n{{/light-table}}\n```\n\nIf you dont have grouped columns, the yielded `groups` will be an array of all visibile columns and `subColumns`\nwill be empty",
            "uses": [
                "TableColumnMixin"
            ]
        },
        "TableHeaderMixin": {
            "name": "TableHeaderMixin",
            "shortname": "TableHeaderMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mixins",
            "namespace": "",
            "file": "addon/mixins/table-header.js",
            "line": 12,
            "extends": "Ember.Mixin",
            "access": "private",
            "tagname": ""
        },
        "TableScrollMixin": {
            "name": "TableScrollMixin",
            "shortname": "TableScrollMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Light Table"
            ],
            "module": "Mixins",
            "namespace": "",
            "file": "addon/mixins/table-scroll.js",
            "line": 14,
            "extends": "Ember.Mixin",
            "access": "private",
            "tagname": ""
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/classes/Column.js",
            "line": 14,
            "itemtype": "property",
            "name": "hidden",
            "type": "{Boolean}",
            "default": "false",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 21,
            "itemtype": "property",
            "name": "ascending",
            "type": "{Boolean}",
            "default": "true",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 28,
            "itemtype": "property",
            "name": "sortable",
            "type": "{Boolean}",
            "default": "true",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 35,
            "itemtype": "property",
            "name": "sorted",
            "type": "{Boolean}",
            "default": "false",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 42,
            "description": "Column header label",
            "itemtype": "property",
            "name": "label",
            "type": "{String}",
            "default": "''",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 50,
            "description": "Text alignment. Possible values are ['left', 'right', 'center']",
            "itemtype": "property",
            "name": "align",
            "type": "{String}",
            "default": "'left'",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 58,
            "description": "An array of sub columns to be grouped together",
            "itemtype": "property",
            "name": "subColumns",
            "type": "{Array}",
            "optional": 1,
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 66,
            "description": "Component name for the column header",
            "itemtype": "property",
            "name": "headerComponent",
            "type": "{String}",
            "optional": 1,
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 74,
            "description": "Component name for the column cells",
            "itemtype": "property",
            "name": "cellComponent",
            "type": "{String}",
            "optional": 1,
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 82,
            "itemtype": "property",
            "name": "valuePath",
            "type": "{String}",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 88,
            "itemtype": "property",
            "name": "width",
            "type": "{String}",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 94,
            "description": "A format function used to calculate a cell's value",
            "itemtype": "property",
            "name": "format",
            "type": "{Function}",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 101,
            "itemtype": "property",
            "name": "isGroupColumn",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 108,
            "itemtype": "property",
            "name": "isVisibleGroupColumn",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Column.js",
            "line": 117,
            "itemtype": "property",
            "name": "visibleSubColumns",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Column",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Row.js",
            "line": 8,
            "itemtype": "property",
            "name": "expanded",
            "type": "{Boolean}",
            "default": "false",
            "class": "Row",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Row.js",
            "line": 15,
            "itemtype": "property",
            "name": "selected",
            "type": "{Boolean}",
            "default": "false",
            "class": "Row",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 17,
            "itemtype": "property",
            "name": "columns",
            "type": "{Ember.Array}",
            "default": "[]",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 24,
            "itemtype": "property",
            "name": "rows",
            "type": "{Ember.Array}",
            "default": "[]",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 31,
            "itemtype": "property",
            "name": "isEmpty",
            "type": "{Boolean}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 37,
            "itemtype": "property",
            "name": "expandedRows",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 43,
            "itemtype": "property",
            "name": "selectedRows",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 49,
            "itemtype": "property",
            "name": "sortedColumns",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 55,
            "itemtype": "property",
            "name": "sortableColumns",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 61,
            "itemtype": "property",
            "name": "visibleColumns",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 67,
            "itemtype": "property",
            "name": "visibleColumnGroups",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 80,
            "itemtype": "property",
            "name": "visibleSubColumns",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 88,
            "itemtype": "property",
            "name": "flattenedColumns",
            "type": "{Ember.Array}",
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 120,
            "description": "Replace all the row's content with content of the argument. If argument is an empty array rows will be cleared.",
            "itemtype": "method",
            "name": "setRows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "rows",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 130,
            "description": "Push the object onto the end of the row array if it is not already present.",
            "itemtype": "method",
            "name": "addRow",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 143,
            "description": "Push the objects onto the end of the row array if it is not already present.",
            "itemtype": "method",
            "name": "addRows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 152,
            "description": "Push the object onto the end of the row array.",
            "itemtype": "method",
            "name": "pushRow",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "pushed row",
                "type": "Row"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 164,
            "description": "Push the object onto the end of the row array.",
            "itemtype": "method",
            "name": "pushRows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "pushed rows",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 176,
            "description": "Insert a row at the specified index.",
            "itemtype": "method",
            "name": "insertRowAt",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "inserted row",
                "type": "Row"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 189,
            "description": "Remove all occurrences of an object in the rows",
            "itemtype": "method",
            "name": "removeRow",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 202,
            "description": "Removes each object in the passed enumerable from the rows.",
            "itemtype": "method",
            "name": "removeRows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 213,
            "description": "Replace all the column's content with content of the argument. If argument is an empty array columns will be cleared.",
            "itemtype": "method",
            "name": "setColumns",
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "columns",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 223,
            "description": "Push the object onto the end of the column array if it is not already present.",
            "itemtype": "method",
            "name": "addColumn",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 232,
            "description": "Push the objects onto the end of the column array if it is not already present.",
            "itemtype": "method",
            "name": "addColumns",
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 241,
            "description": "Push the object onto the end of the column array.",
            "itemtype": "method",
            "name": "pushColumn",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "pushed column",
                "type": "Column"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 253,
            "description": "Push the object onto the end of the column array.",
            "itemtype": "method",
            "name": "pushColumns",
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "pushed columns",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 265,
            "description": "Insert a column at the specified index.",
            "itemtype": "method",
            "name": "insertColumnAt",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "column",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "inserted column",
                "type": "Column"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 278,
            "description": "Remove all occurrences of an object in the columns",
            "itemtype": "method",
            "name": "removeColumn",
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 287,
            "description": "Removes each object in the passed enumerable from the columns.",
            "itemtype": "method",
            "name": "removeColumns",
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 296,
            "description": "Create a Row object with the given content",
            "itemtype": "method",
            "name": "createRow",
            "static": 1,
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Row"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 307,
            "description": "Create a collection of Row objects with the given collection",
            "itemtype": "method",
            "name": "createRows",
            "static": 1,
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 318,
            "description": "Create a Column object with the given options",
            "itemtype": "method",
            "name": "createColumn",
            "static": 1,
            "params": [
                {
                    "name": "column",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Column"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/classes/Table.js",
            "line": 329,
            "description": "Create a collection of Column objects with the given collection",
            "itemtype": "method",
            "name": "createColumns",
            "static": 1,
            "params": [
                {
                    "name": "columns",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Table",
            "module": "Classes"
        },
        {
            "file": "addon/components/light-table.js",
            "line": 37,
            "itemtype": "property",
            "name": "table",
            "type": "{Table}",
            "class": "Light Table",
            "module": "Components"
        },
        {
            "file": "addon/components/light-table.js",
            "line": 43,
            "description": "This is used to propate custom user defined actions to custom cell and header components.\nAs an example, lets say I have a table with a column defined with `cellComponent: 'delete-user'`\n\n```hbs\n{{#light-table table tableActions=(hash\n  deleteUser=(action 'deleteUser')\n ) as |t|}}\n  {{t.head}}\n  {{t.body}}\n  {{t.foot}}\n{{/light-table}}\n```\n\nNow in the `delete-user` component, we can access that `deleteUser` action and pass it the\nrow object which will bubble all the way to where you defined that action.\n\n```hbs\n<button {{action tableActions.deleteUser row}}>Delete Me</button>\n```",
            "itemtype": "property",
            "name": "tableActions",
            "type": "{Object}",
            "class": "Light Table",
            "module": "Components"
        },
        {
            "file": "addon/components/light-table.js",
            "line": 76,
            "description": "Action to be called when user reached the bottom of the scroll container",
            "itemtype": "event",
            "name": "onScrolledToBottom",
            "class": "Light Table",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 44,
            "itemtype": "property",
            "name": "table",
            "type": "{Table}",
            "access": "private",
            "tagname": "",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 51,
            "itemtype": "property",
            "name": "tableActions",
            "type": "{Object}",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 57,
            "description": "Allows a user to select a row on click. All this will do is apply the necessary\nCSS classes and add the row to `table.selectedRows`. If `multiSelect` is disabled\nonly one row will be selected at a time.",
            "itemtype": "property",
            "name": "canSelect",
            "type": "{Boolean}",
            "default": "true",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 68,
            "description": "Allows for expanding row. This will create a new row under the row that was\nclicked with the template provided by `body.expanded-row`.\n\n```hbs\n{{#body.expanded-row as |row|}}\n\tThis is the content of the expanded row for {{row.firstName}}\n{{/body.expanded-row}}\n```",
            "itemtype": "property",
            "name": "canExpand",
            "type": "{Boolean}",
            "default": "false",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 84,
            "description": "Allows a user to select multiple rows with the `ctrl`, `cmd`, and `shift` keys.\nThese rows can be easily accessed via `table.get('selectedRows')`",
            "itemtype": "property",
            "name": "multiSelect",
            "type": "{Boolean}",
            "default": "false",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 94,
            "description": "Allows multiple rows to be expanded at once",
            "itemtype": "property",
            "name": "multiRowExpansion",
            "type": "{Boolean}",
            "default": "true",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 103,
            "description": "Expand a row on click",
            "itemtype": "property",
            "name": "expandOnClick",
            "type": "{Boolean}",
            "default": "true",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 112,
            "description": "Table body height. This needs to be specified for fixed\nfooter and header",
            "itemtype": "property",
            "name": "height",
            "type": "{String}",
            "default": "inherit",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 122,
            "description": "ID of main table component. Used to generate divs for ember-wormhole",
            "type": "{String}",
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 152,
            "description": "onRowClick action. Handles selection, and row expansion.",
            "itemtype": "event",
            "name": "onRowClick",
            "params": [
                {
                    "name": "row",
                    "description": "The row that was clicked",
                    "type": "Row"
                },
                {
                    "name": "event",
                    "description": "The click event",
                    "type": "Event"
                }
            ],
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/components/lt-body.js",
            "line": 193,
            "description": "onRowDoubleClick action.",
            "itemtype": "event",
            "name": "onRowDoubleClick",
            "params": [
                {
                    "name": "row",
                    "description": "The row that was clicked",
                    "type": "Row"
                },
                {
                    "name": "event",
                    "description": "The click event",
                    "type": "Event"
                }
            ],
            "class": "Body",
            "module": "Components"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 19,
            "itemtype": "property",
            "name": "fixed",
            "type": "{Boolean}",
            "default": "false",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 26,
            "itemtype": "property",
            "name": "sortOnClick",
            "type": "{Boolean}",
            "default": "true",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 33,
            "itemtype": "property",
            "name": "multiColumnSort",
            "type": "{Boolean}",
            "default": "false",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 40,
            "itemtype": "property",
            "name": "iconAscending",
            "type": "{String}",
            "default": "''",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 47,
            "itemtype": "property",
            "name": "iconDescending",
            "type": "{String}",
            "default": "''",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 54,
            "description": "ID of main table component. Used to generate divs for ember-wormhole",
            "type": "{String}",
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 70,
            "description": "onColumnClick action. Handles column sorting.",
            "itemtype": "event",
            "name": "onColumnClick",
            "params": [
                {
                    "name": "column",
                    "description": "The column that was clicked",
                    "type": "Column"
                },
                {
                    "name": "event",
                    "description": "The click event",
                    "type": "Event"
                }
            ],
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-header.js",
            "line": 91,
            "description": "onColumnDoubleClick action.",
            "itemtype": "event",
            "name": "onColumnDoubleClick",
            "params": [
                {
                    "name": "column",
                    "description": "The column that was clicked",
                    "type": "Column"
                },
                {
                    "name": "event",
                    "description": "The click event",
                    "type": "Event"
                }
            ],
            "class": "TableHeaderMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-scroll.js",
            "line": 20,
            "itemtype": "property",
            "name": "scrollBuffer",
            "type": "{Number}",
            "default": "500",
            "class": "TableScrollMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-scroll.js",
            "line": 27,
            "itemtype": "property",
            "name": "scrollContainer",
            "type": "{String | Object}",
            "default": "window",
            "class": "TableScrollMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-scroll.js",
            "line": 34,
            "itemtype": "property",
            "name": "touchMoveContainer",
            "type": "{String | Object}",
            "default": "document",
            "class": "TableScrollMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-scroll.js",
            "line": 41,
            "itemtype": "property",
            "name": "_shouldSetupScroll",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "TableScrollMixin",
            "module": "Mixins"
        },
        {
            "file": "addon/mixins/table-scroll.js",
            "line": 69,
            "description": "If there is a fixed header and footer, that means that the scroll container\nmust be the lt-body-wrap with the fixed height and overflow:auto.",
            "class": "TableScrollMixin",
            "module": "Mixins"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nID of main table component. Used to generate divs for ember-wormhole",
            "line": " addon/components/lt-body.js:122"
        },
        {
            "message": "Missing item type\nID of main table component. Used to generate divs for ember-wormhole",
            "line": " addon/mixins/table-header.js:54"
        },
        {
            "message": "Missing item type\nIf there is a fixed header and footer, that means that the scroll container\nmust be the lt-body-wrap with the fixed height and overflow:auto.",
            "line": " addon/mixins/table-scroll.js:69"
        }
    ]
}